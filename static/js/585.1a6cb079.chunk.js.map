{"version":3,"file":"static/js/585.1a6cb079.chunk.js","mappings":"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","sources":["components/form/Form.styled.js","components/form/Form.jsx","components/title/Title.styled.js","components/title/Title.jsx","components/contacts/notafication/Notafication.styled.js","components/contacts/notafication/Notafication.jsx","components/contacts/Contacts.styled.js","components/contacts/Contacts.jsx","components/filter/Filter.styled.js","components/filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const PhoneBookForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  padding: 10px;\n  box-sizing: border-box;\n  max-width: 500px;\n  margin: 20px auto;\n  border: 5px solid #fbcf1f;\n  border-radius: 5px;\n  box-shadow: 0.5em 0.5em ;\n\n`;\nexport const PhoneBookLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 20px;\n  color: #fff;\n  box-sizing: border-box;\n  gap: 10px;\n  font-size: 20px;\n  font-weight: 700;\n  width: 100%;\n`;\nexport const PhoneBookInput = styled.input`\n  width: 100%;\n  padding: 10px;\n  box-sizing: border-box;\n  font-size: 20px;\n  font-weight: 500;\n  border: 1px solid #000;\n  border-radius: 5px;\n  outline: none;\n  &:focus {\n    border: 1px solid #000;\n  }\n`;\nexport const PhoneBookButton = styled.button`\nbackground: #FBCA1F;\nfont-family: inherit;\ncolor: #000;\npadding: 0.6em 1.3em;\nfont-weight: 900;\nfont-size: 18px;\nborder: 3px solid black;\nborder-radius: 0.4em;\ncursor : pointer;\nbox-shadow: 0.1em 0.1em;\n&:hover {\n        transform: translate(-0.05em, -0.05em);\n        box-shadow: 0.15em 0.15em;\n}\n&:active {\n        transform: translate(0.05em, 0.05em);\n        box-shadow: 0.05em 0.05em;\n}  \n@media screen and (max-width: 767px) {\n  font-size: 14px;\n  font-weight: 400;\n  border: 1px solid black;\npadding: 0.4em 1.0em;\n  \n  text-align: center;\n  color: #000;\n  font-family: inherit;\n  }\n`;\n","import { useState } from 'react';\nimport { addContact } from 'redux/Contacts/ContactsOperations';\nimport { useDispatch } from 'react-redux';\nimport { PhoneBookForm, PhoneBookLabel, PhoneBookButton } from './Form.styled';\nimport { TextField } from '@mui/material';\n\nconst Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const onInputChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const contact = {\n      name,\n      number,\n    };\n\n    dispatch(addContact(contact));\n\n    e.target.reset();\n  };\n\n  return (\n    <div>\n      <PhoneBookForm onSubmit={handleSubmit}>\n        <PhoneBookLabel>\n          Name\n          <TextField\n            onChange={onInputChange}\n            required\n            type=\"text\"\n            name=\"name\"\n            label=\"John Smith\"\n            variant=\"filled\"\n            InputLabelProps={{\n              style: { color: '#fbcf1f' },\n            }}\n            fullWidth\n          />\n        </PhoneBookLabel>\n        <PhoneBookLabel>\n          Number\n          <TextField\n            onChange={onInputChange}\n            InputLabelProps={{\n              style: {\n                color: '#fbcf1f',\n              },\n            }}\n            fullWidth\n            required\n            type=\"text\"\n            name=\"number\"\n            label=\"+38(0__)___-__-__\"\n            variant=\"filled\"\n          />\n        </PhoneBookLabel>\n        <PhoneBookButton type=\"submit\">Add Contact</PhoneBookButton>\n      </PhoneBookForm>\n    </div>\n  );\n};\n\nexport default Form;\n","import styled from '@emotion/styled';\n\nexport const Heading = styled.h2`\n  font-size: 30px;\n  font-weight: 900;\n  color: #fff;\n  margin-top: 20px;\n  text-align: center;\n  margin-bottom: 20px;\n`;\n","import { Heading } from './Title.styled';\nimport PropTypes from 'prop-types';\n\nconst Title = ({ title }) => {\n  return <Heading>{title}</Heading>;\n};\nexport default Title;\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\nexport const NotaficationBox = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nexport const NotaficationText = styled.p`\n  font-size: 20px;\n  font-weight: 700;\n  color: #000;\n`;\n","import { NotaficationBox, NotaficationText } from './Notafication.styled';\n\nconst Notification = () => {\n  return (\n    <NotaficationBox>\n      <NotaficationText>There is no such contact</NotaficationText>\n    </NotaficationBox>\n  );\n};\nexport default Notification;\n","import styled from '@emotion/styled';\nexport const ContactsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px 10px;\n  border: 1px solid #000;\n  border-radius: 5px;\n  width: 300px;\n  margin: 0 auto;\n  margin-top: 20px;\n  margin-bottom: 50px;\n`;\nexport const ContactsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  padding: 20px;\n  gap: 20px;\n`;\n\nexport const ContactsItem = styled.li`\n  display: flex;\n  font-size: 16px;\n  padding: 10px;\n  transition: all 250ms linear;\n  &:hover {\n    transform: scale(1.1);\n    background-color: #fbcf1f;\n    border-radius: 5px;\n\n    & button {\n      background: #7c3039;\n    }\n  }\n`;\nexport const Button = styled.button`\n  background: #fbca1f;\n  font-family: inherit;\n  color: #000;\n  padding: 0.6em 1.3em;\n  font-weight: 900;\n  font-size: 18px;\n  border: 3px solid black;\n  border-radius: 0.4em;\n  cursor: pointer;\n  box-shadow: 0.1em 0.1em;\n  &:hover {\n    transform: translate(-0.05em, -0.05em);\n    box-shadow: 0.15em 0.15em;\n  }\n  &:active {\n    transform: translate(0.05em, 0.05em);\n    box-shadow: 0.05em 0.05em;\n  }\n  @media screen and (max-width: 767px) {\n    font-size: 14px;\n    font-weight: 400;\n    border: 1px solid black;\n    padding: 0.4em 1em;\n\n    text-align: center;\n    color: #000;\n    font-family: inherit;\n  }\n`;\n\nexport const Span = styled.span`\n  font-size: 16px;\n  color: #fff;\n  display: flex;\n  margin-right: 10px;\n`;\nexport const SpanWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n","import React from 'react';\nimport { useEffect } from 'react';\nimport {\n  fetchContacts,\n  deleteContact,\n} from '../../redux/Contacts/ContactsOperations';\nimport {  useDispatch } from 'react-redux';\nimport Notification from './notafication/Notafication';\nimport {\n  Span,\n  SpanWrapper,\n  ContactsList,\n  ContactsItem,\n  Button,\n} from './Contacts.styled';\nimport { useSelectors } from '../hooks/UseSelector';\n\nconst Contact = () => {\n  const { contacts, filter, isLoggedIn } = useSelectors();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter ? filter.toLowerCase() : '';\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n  return (\n    <ContactsList>\n      {isLoggedIn ? (\n        getVisibleContacts().map(({ id, name, number }) => (\n          <ContactsItem key={id}>\n            <SpanWrapper>\n              <Span>{name}:</Span>\n              <Span>{number}</Span>\n            </SpanWrapper>\n            <Button onClick={e => dispatch(deleteContact(id))}>Delete</Button>\n          </ContactsItem>\n        ))\n      ) : (\n        <Notification />\n      )}\n    </ContactsList>\n  );\n};\nexport default Contact;\n","import styled from '@emotion/styled';\n\nexport const FilterTitle = styled.label`\n  text-aligh: left;\n  margin-bottom: 10px;\n  font-size: 20px;\n  font-weigth: 500;\n  color: #fff;\n`;\nexport const FilterInput = styled.input`\n  width: 600px;\n  padding: 5px;\n  margin-bottom: 20px;\n  border: 1px solid #000;\n  border-radius: 5px;\n  font-size: 16px;\n  font-weigth: 500;\n  margin-top: 5px;\n`;\nexport const FilterContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 600px;\n  margin: 0 auto;\n  margin-top: 20px;\n  @media screen and (max-width: 768px) {\n    max-width: 300px;\n    margin: 0 auto;\n  }\n`;\n","import React from 'react';\nimport {  useDispatch } from 'react-redux';\nimport { filterSlice } from '../../redux/Filter/FilterSlice';\nimport { FilterTitle, FilterContainer } from './Filter.styled';\nimport { TextField } from '@mui/material';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  \n  return (\n    <FilterContainer>\n      <FilterTitle>Find contacts by name</FilterTitle>\n      <TextField\n        onChange={e => dispatch(filterSlice(e.target.value))}\n        required\n        type=\"text\"\n        name=\"name\"\n        label=\"Type name to filter contacts\"\n        variant=\"filled\"\n        InputLabelProps={{\n          style: { color: '#fbcf1f' },\n        }}\n      />\n    </FilterContainer>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport { Form, Title, Contact, Filter } from '../components';\n\nconst Contacts = () => {\n  return (\n    <>\n      <Form />\n      <Title title=\"Contacts\" />\n      <Filter />\n      <Contact />\n    </>\n  );\n};\n\nexport default Contacts;"],"names":["PhoneBookForm","styled","PhoneBookLabel","PhoneBookButton","useState","name","setName","number","setNumber","dispatch","useDispatch","onInputChange","e","target","value","onSubmit","preventDefault","contact","addContact","reset","TextField","onChange","required","type","label","variant","InputLabelProps","style","color","fullWidth","Heading","title","NotaficationBox","NotaficationText","ContactsList","ContactsItem","Button","Span","SpanWrapper","useSelectors","contacts","filter","isLoggedIn","useEffect","fetchContacts","normalizedFilter","toLowerCase","includes","getVisibleContacts","map","id","onClick","deleteContact","FilterTitle","FilterContainer","filterSlice"],"sourceRoot":""}