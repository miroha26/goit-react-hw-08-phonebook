{"version":3,"file":"static/js/422.a7ea99e7.chunk.js","mappings":"iYAGaA,EAAgBC,EAAAA,EAAAA,IAAH,8XAkBbC,EAAYD,EAAAA,EAAAA,GAAH,2EAITE,EAAcF,EAAAA,EAAAA,IAAH,iEAIXG,EAAYH,EAAAA,EAAAA,MAAH,8CAGTI,GAAYJ,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAH,4SAKX,kBAA8B,UAA9B,EAAGM,QAAqC,OAAS,KAAjD,IAGkB,kBAA8B,UAA9B,EAAGA,QAAqC,UAAY,KAApD,IAQhBC,GAAYP,EAAAA,EAAAA,GAAOQ,EAAAA,GAAPR,CAAH,0HAQTS,EAAUT,EAAAA,EAAAA,IAAH,gKAOPU,EAAeV,EAAAA,EAAAA,OAAH,0c,2IC7CnBW,EAAmBC,EAAAA,GAAW,CAClCC,KAAMD,EAAAA,KACHE,IAAI,GACJC,IAAI,IACJC,SAAS,kDACZC,MAAOL,EAAAA,KAAaK,QAAQD,WAC5BE,SAAUN,EAAAA,KACPE,IAAI,GACJC,IAAI,IACJC,SAAS,mCAGRG,EAAgB,CACpBN,KAAM,GACNI,MAAO,GACPC,SAAU,IA+DZ,EA5DiB,WACf,IAAME,GAAWC,EAAAA,EAAAA,MAMjB,OACE,SAAC,KAAD,WACE,SAAC,KAAD,CACEC,SARe,SAACC,EAAD,IACnBC,EAD6C,EAAhBA,aAE7BJ,GAASK,EAAAA,EAAAA,IAAOF,GACjB,EAMKJ,cAAeA,EACfR,iBAAkBA,EAHpB,SAKG,gBAAGe,EAAH,EAAGA,QAAH,OACC,UAAC,KAAD,CAAMC,aAAa,MAAnB,WACE,SAAC,KAAD,uBACA,UAAC,KAAD,YACE,UAAC,KAAD,YACE,SAAC,KAAD,CACErB,QAASoB,EAAQE,WACjBC,KAAK,OACLhB,KAAK,OACLiB,YAAY,eAEd,SAAC,KAAD,CAAWjB,KAAK,OAAOkB,UAAU,UAEnC,UAAC,KAAD,YACE,SAAC,KAAD,CACEzB,QAASoB,EAAQE,WAEjBC,KAAK,QACLhB,KAAK,QACLiB,YAAY,WAEd,SAAC,KAAD,CAAWjB,KAAK,QAAQkB,UAAU,UAEpC,UAAC,KAAD,YACE,SAAC,KAAD,CACEzB,QAASoB,EAAQE,WAEjBC,KAAK,WACLhB,KAAK,WACLiB,YAAY,cAEd,SAAC,KAAD,CAAWjB,KAAK,WAAWkB,UAAU,aAGzC,SAAC,KAAD,WACE,SAAC,KAAD,CAAcF,KAAK,SAASG,UAAWN,EAAvC,yBAnCL,KA4CR,C","sources":["pages/Form.styled.js","pages/Register.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field, ErrorMessage } from 'formik';\n\nexport const WrapperStyled = styled.div`\n  background: #fff;\n  width: 500px;\n  margin: 65px auto;\n  display: -webkit-box;\n  display: flex;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n  flex-direction: column;\n  border-radius: 4px;\n  box-shadow: 0 2px 25px rgba(0, 0, 0, 0.2);\n\n  @media screen and (max-width: 767px) {\n    max-width: 300px;\n    padding: 10px;\n  }\n`;\n\nexport const FormTitle = styled.h1`\n  padding: 35px 35px 0 35px;\n  font-weight: 300;\n`;\nexport const FormContent = styled.div`\n  padding: 35px;\n  text-align: center;\n`;\nexport const FormLabel = styled.label`\n  padding: 12px 5px;\n`;\nexport const FormInput = styled(Field)`\n  font-size: 16px;\n  display: block;\n  font-family: 'Rubik', sans-serif;\n  width: 100%;\n  color: ${({ isvalid }) => (isvalid !== 'false' ? '#777' : 'red')};\n  padding: 10px 1px;\n  border: 0;\n  border-bottom: 1px solid ${({ isvalid }) => (isvalid !== 'false' ? '#e8e9ec' : 'red')};\n  outline: none;\n  transition: all 0.2s;\n  &::placeholder {\n    text-transform: uppercase;\n  }\n`;\n\nexport const FormError = styled(ErrorMessage)`\n  color: red;\n  font-size: 12px;\n  margin-top: 5px;\n  text-align: left;\n  padding-left: 5px;\n`;\n\nexport const Buttons = styled.div`\n  display: -webkit-box;\n  display: flex;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n  flex-direction: row;\n`;\nexport const SubmitButton = styled.button`\n  width: 100%;\n  border: none;\n  padding: 18px;\n  font-family: 'Rubik', sans-serif;\n  cursor: pointer;\n  text-transform: uppercase;\n  background: #e8e9ec;\n  color: #777;\n  border-bottom-left-radius: 0;\n  border-bottom-right-radius: 4px;\n  letter-spacing: 0.2px;\n  outline: 0;\n  -webkit-transition: all 0.3s;\n  transition: all 0.3s;\n  &:hover {\n    background: #d5d6d9;\n  }\n  &:active {\n    background: #c4c5c8;\n  }\n`;\n","import React from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {\n  WrapperStyled,\n  Buttons,\n  FormContent,\n  SubmitButton,\n  FormTitle,\n  FormLabel,\n  FormError,\n  FormInput,\n} from './Form.styled';\n\nimport { signUp } from 'redux/Auth/AuthOperations';\nimport { useDispatch } from 'react-redux';\n\nconst validationSchema = Yup.object({\n  name: Yup.string()\n    .min(8)\n    .max(50)\n    .required('must consist of two words separated by a space'),\n  email: Yup.string().email().required(),\n  password: Yup.string()\n    .min(7)\n    .max(16)\n    .required('must be at least 7 characters'),\n});\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst Register = () => {\n  const dispatch = useDispatch();\n  const handleSubmit = (value, { resetForm }) => {\n    resetForm();\n    dispatch(signUp(value));\n  };\n\n  return (\n    <WrapperStyled>\n      <Formik\n        onSubmit={handleSubmit}\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n      >\n        {({ isValid }) => (\n          <Form autoComplete=\"off\">\n            <FormTitle>Sign Up</FormTitle>\n            <FormContent>\n              <FormLabel>\n                <FormInput\n                  isvalid={isValid.toString()}\n                  type=\"text\"\n                  name=\"name\"\n                  placeholder=\"Full name\"\n                />\n                <FormError name=\"name\" component=\"p\" />\n              </FormLabel>\n              <FormLabel>\n                <FormInput\n                  isvalid={isValid.toString()}\n\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                />\n                <FormError name=\"email\" component=\"p\" />\n              </FormLabel>\n              <FormLabel>\n                <FormInput\n                  isvalid={isValid.toString()}\n\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                />\n                <FormError name=\"password\" component=\"p\" />\n              </FormLabel>\n            </FormContent>\n            <Buttons>\n              <SubmitButton type=\"submit\" disabled={!isValid}>\n                Sign Up\n              </SubmitButton>\n            </Buttons>\n          </Form>\n        )}\n      </Formik>\n    </WrapperStyled>\n  );\n};\n\nexport default Register;\n"],"names":["WrapperStyled","styled","FormTitle","FormContent","FormLabel","FormInput","Field","isvalid","FormError","ErrorMessage","Buttons","SubmitButton","validationSchema","Yup","name","min","max","required","email","password","initialValues","dispatch","useDispatch","onSubmit","value","resetForm","signUp","isValid","autoComplete","toString","type","placeholder","component","disabled"],"sourceRoot":""}